{"name":"Easy-cassandra","tagline":"easy programming  with Cassandra","body":"Welcome to the Easy-Cassandra wiki!\r\n\r\nEasily programming with this framework, the Easy Cassandra\r\n\r\n Easy-Cassandra is a framework ORM API and a high client for Apache Cassandra in java, with this is possible persist information from the Java Object in easy way. For this is only necessary add some annotations in some fields and your class. It works like an abstraction's tier in the Thrift, doing call for Cassandra.\r\n The EasyCassandra uses the Thrift implementation and has like the main objective be one simple ORM( Object relational manager). \r\n\r\n## Features\r\n\r\n* An ORM easy to use in Cassandra\r\n* Need only use some Annotations in a class to persist\r\n* Persists many Java Objects in way extremely easy (e.g: all primitives types, java.Lang.String, java.lang.BigDecimal, java.io.File, etc.).\r\n* Read and Write in Cassandra with Level Consistency.\r\n* The first framework ORM in Cassandra to compatibles with version above 0.8.0.\r\n* The first to use CQL\r\n* compatible with CQL 3.0\r\n* In the Apache version 2.0 license\r\n* Supporting JPA 2.0 annotation\r\n* Work with multi-nodes\r\n* Complex rowkey (a key with tow or more keyrow).\r\n* Map some collections (java.util.List, java.util.Set, java.util.Map).\r\n* Find automatically the others clusters which do part of the same cluster.\t\r\n* Objects may use a different keyspace using schema.\t\r\n* Custom storage way with CustomData annotation.\r\n* Integration with Spring\r\n* suports multiple index\r\n\r\n\r\n## Informations\r\n* [Wiki](https://github.com/otaviojava/Easy-Cassandra/wiki)\r\n\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}